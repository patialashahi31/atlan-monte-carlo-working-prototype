version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - cassandra
      - kafka
    restart: always
    networks:
      - monte-carlo

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    volumes:
      - ./cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_START_RPC=true
    restart: always
    networks:
      - monte-carlo

  monte_carlo_producer:
    build:
      context: .
      dockerfile: MonteCarloProducerDockerfile
    depends_on:
      - kafka
    networks:
      - monte-carlo
    restart: always
    logging:
      driver: json-file # default, can be omitted

  monte_carlo_consumer:
    build:
      context: .
      dockerfile: MonteCarloConsumerDockerfile
    depends_on:
      - kafka
      - cassandra
    networks:
      - monte-carlo
    restart: always



  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    restart: always
    networks:
      - monte-carlo


networks:
  monte-carlo:



